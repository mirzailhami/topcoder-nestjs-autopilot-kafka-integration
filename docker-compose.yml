version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "kafka:9092"]
      interval: 10s
      timeout: 10s
      retries: 15
      start_period: 60s

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      PORT: 3000
      KAFKA_BROKERS: kafka:9092
      KAFKA_CLIENT_ID: autopilot-client
      KAFKA_GROUP_ID: autopilot-group
      AUTH_KAFKA_API_URL: https://kafka.api.example.com
      AUTH_KAFKA_CLIENT_ID: mock-client-id
      AUTH_KAFKA_CLIENT_SECRET: mock-client-secret
      AUTH_TOPCODER_API_URL: https://api.topcoder.com
      AUTH_TOPCODER_CLIENT_ID: mock-topcoder-client-id
      AUTH_TOPCODER_CLIENT_SECRET: mock-topcoder-client-secret